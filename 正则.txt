. 匹配单个任意字符
* 重复前面任意0个或多个字符
.* 匹配任意字符
^ 表示以…开通的，^abd ：以abc开头的
$ 以…结尾的，示例 abc$ :以abc结尾
^$  空行
\ 转义符号 例如\\就是\，让有特殊意义的字符返回原型
* 匹配前面一个字符0次或多次
.* 匹配所有字符。  延伸： ^.* 以任意多个字符开头 .*$以任意多个字符结尾

[abc] 匹配字符集合内的任意一个字符[a-zA-Z],[0-9]
[^abc] 匹配不包含^后的字符的内容

a\{n,m\}重复n到m次,前一个重复的字符.如果用egrep/sed -r/grep -E可以去掉斜线。
\{n,\} 重复至少n次,前一个重复的字符
\{n\}重复n次,前一个重复的字符
\{,n\} 重复最多n次
扩展:
+重复一个或一个以上前面的字符
?重复0个或一个前面得字符
| 相当于或，常用于过滤多个符合的字符串




通配符：
通配符和正则表达式不一样，代表的意义也有区别。
通配符常用语命令行bash环境,正则表达式常用于grep sed awk场景

* 通配符,代表任意(0到多个)字符
? 通配符,代表任意一个字符
; 连续不同命令的分隔符
# 配置文件注释
| 管道
~ 用户家目录
- 上一次目录
$ 变量前要加的符号
/ 路径分隔符
< 输入重定向
<< 追加输入重定向
'' 单引号，不具有变量置换功能，输出所见即所得
"" 双引号，具有变量置换功能，解析变量后输出
` Tab上面的键，反引号，两个``中间为命令，会先执行，等价$()
{} 中间为命令区块组合或内容序列
! 逻辑非
&& 当前一个指令执行成功时，执行后一个指令
|| 当前一个指令执行失败时，执行后一个指令，成功则不执行
.. 上一级目录
. 当前目录